(()=>{const e=document.querySelector(".city-input"),t=document.querySelector(".search-btn"),n=(document.querySelector(".location-btn"),document.querySelector(".current-weather")),i=document.querySelector(".weather-cards"),r=(document.querySelector(".error_text"),["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][(new Date).getDay()]),a="c93fd1817f3fbe42aeac0a63076603b9",o=(t,o,c)=>{fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${o}&lon=${c}&appid=${a}`).then((e=>e.json())).then((a=>{const o=a.city.sunrise,c=[],s=a.list.filter((e=>{const t=new Date(e.dt_txt).getDate();if(!c.includes(t))return c.push(t)}));e.value="",n.innerHTML="",i.innerHTML="",s.forEach(((e,a)=>{const c=((e,t,n,i)=>{if(0===i){const i=new Date(1e3*t).toUTCString().slice(-11,-4);return`<div class="details">\n                    <h2>${r} <span>|</span> ${n.dt_txt.split(" ")[0]}</h2>\n                    <h2>${e}</h2>\n                    <h6 id="main-temp">${(n.main.temp-273.15).toFixed(0)}°C</h6>\n                    <div class="min_max">\n                    <h6>L : ${(n.main.temp_min-273.15).toFixed(0)}°C</h6>\n                    <span>|</span>\n                    <h6>H : ${(n.main.temp_max-273.15).toFixed(0)}°C</h6>\n                    </div>\n                    <h6>Feels Like: ${(n.main.feels_like-273.15).toFixed(2)}°C</h6>\n                    <h6>Wind: ${n.wind.speed} M/S</h6>\n                    <h6>Visibility: ${n.visibility/100} KM</h6>\n                    <h6>Sunrise: ${i} </h6>\n                </div>\n                <div class="icon">\n                    <img src="https://openweathermap.org/img/wn/${n.weather[0].icon}@4x.png" alt="weather-icon">\n                    <h6>${n.weather[0].description}</h6>\n                </div>`}return`<li class="card">\n                    <h3>${n.dt_txt.split(" ")[0]}</h3>\n                    <img src="https://openweathermap.org/img/wn/${n.weather[0].icon}@4x.png" alt="weather-icon">\n                    <h6>${n.weather[0].description.toUpperCase()}</h6>\n                    <h6>Temp: ${(n.main.temp-273.15).toFixed(2)}°C</h6>\n                    <h6>Wind: ${n.wind.speed} M/S</h6>\n                    <h6>Humidity: ${n.main.humidity}%</h6>\n                </li>`})(t,o,e,a);0===a?n.insertAdjacentHTML("beforeend",c):i.insertAdjacentHTML("beforeend",c)}))})).catch((()=>{alert("An error occurred while fetching the weather forecast!")}))},c=()=>{const t=e.value.trim();""!==t&&fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${t}&limit=1&appid=${a}`).then((e=>e.json())).then((e=>{if(!e.length)return s();const{lat:t,lon:n,name:i}=e[0];o(i,t,n)})).catch((()=>{alert("An error occurred while fetching the coordinates!")}))};function s(){alert(`No coordinates found for ${cityName}`)}navigator.geolocation.getCurrentPosition((e=>{const{latitude:t,longitude:n}=e.coords;fetch(`https://api.openweathermap.org/geo/1.0/reverse?lat=${t}&lon=${n}&limit=1&appid=${a}`).then((e=>e.json())).then((e=>{const{name:i}=e[0];o(i,t,n)})).catch((()=>{alert("An error occurred while fetching the city name!")}))}),(e=>{e.code===e.PERMISSION_DENIED?alert("Geolocation request denied. Please reset location permission to grant access again"):alert("Geolocation request error. Please reset location permission.")})),t.addEventListener("click",c),e.addEventListener("keyup",(e=>"Enter"===e.key&&c()))})();